FROM nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04

# Install basic dependencies
RUN apt update && apt install python3-pip git vim sudo curl wget apt-transport-https ca-certificates gnupg libgl1 -y

# Upgrade setuptools
RUN pip install setuptools

# Install JAX and dependencies with specific versions
RUN pip3 uninstall -y jax jaxlib jaxopt flax brax && \
    pip3 install --upgrade "jax[cuda]==0.4.16" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html && \
    pip3 install --upgrade jaxlib==0.4.16 -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html && \
    pip3 install --upgrade flax==0.6.11 optax==0.1.7 jaxopt==0.8.1 brax==0.9.2 chex==0.1.8

# Install additional Python packages
RUN pip3 install notebook matplotlib tqdm jupyter ipython wandb rich
RUN pip3 install distrax==0.1.5 gym==0.26.2 gymnax==0.0.6 mujoco==2.3.7 tensorflow-probability==0.22.0 scipy==1.11.3

# Update PATH for local binaries
RUN echo 'export PATH=$PATH:/home/duser/.local/bin' >> ~/.bashrc


# Install additional Python packages
RUN pip install --upgrade typing_extensions
RUN pip install --upgrade wandb pydantic

# Login to wandb => Change this to your own wandb login
RUN wandb login 7f3957911a23ee9f513e7b366cf47df00450457c

# Install utilities
RUN apt-get update && apt-get install -y p7zip-full
RUN apt-get update && apt-get install -y unrar
RUN apt-get update && apt-get install -y htop


# ------------------------------------------------------------------ #

RUN apt-get update && apt-get install -y \
    wget \
    bzip2 \
    libarchive-dev \
    && rm -rf /var/lib/apt/lists/*

RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh && \
    bash miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh

ENV PATH="/opt/conda/bin:$PATH"

RUN conda config --add channels anaconda && \
    conda config --add channels conda-forge && \
    conda config --add channels nvidia && \
    conda config --add channels r && \
    conda config --add channels bioconda && \
    conda config --add channels defaults && \
    conda config --set channel_priority flexible

RUN conda config --set solver classic

# Копируем файлы зависимостей в контейнер
COPY requirements_conda.txt /tmp/requirements_conda.txt
COPY requirements_pip.txt /tmp/requirements_pip.txt

# Создаем conda окружение и устанавливаем зависимости из requirements_conda.txt
RUN conda create -n myenv --file /tmp/requirements_conda.txt

# Устанавливаем зависимости из requirements_pip.txt через pip
RUN /bin/bash -c "source /opt/conda/etc/profile.d/conda.sh && conda activate myenv && pip install -r /tmp/requirements_pip.txt"

SHELL ["conda", "run", "-n", "myenv", "/bin/bash", "-c"]

# ------------------------------------------------------------------ #

# Create and configure non-root user
ARG UID=1000
RUN useradd -u $UID --create-home duser && \
    echo "duser:duser" | chpasswd && \
    adduser duser sudo && \
    mkdir -p /home/duser/.local/bin && \
    chown -R duser:duser /home/duser

# Switch to non-root user
USER duser
WORKDIR /home/duser/

# Configure git
RUN git config --global user.email "george_nigm@icloud.com"
RUN git config --global user.name "george_nigm"

# Add alias for ipython
RUN echo "alias i='/usr/local/bin/ipython'" >> ~/.bashrc


# Commands
#1 docker rmi georgenigm_docker
#2.1. docker build -t georgenigm_docker .
#2.2. docker build -f georgenigm_docker --build-arg UID=$UID --build-arg GIT_TOKEN=$GIT_TOKEN -t georgenigm_image .


#3 docker run --gpus '"device=2"' -d -it -v $(pwd):/app --name georgenigm_docker_container georgenigm_docker /bin/bash

# я на своём личном компьютере - подключаюсь по ssh к серверу общему (пишу пароли) - на сервере запускаю докер контейнер - из контейнера запускаю jupyter notebook 
